version: "3.2"

volumes:
  esdata:
  logs:
  filebeat:

services:

  java-application:
    image: nexus.gs.test.nat.bt.com/devcon-docker-demo
    ports:
      - "63000:8080"
    volumes:
      - logs:/logs
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 2m

  filebeat:
    image: nexus.gs.test.nat.bt.com/devcon-docker-demo-filebeat
    command: [ filebeat, -e, -v ]
    volumes:
      - logs:/logs
      - filebeat:/filebeat
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 2m




#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka-docker:latest
#    ports:
#      - target: 9094
#        published: 9094
#        protocol: tcp
#        mode: host
#    environment:
#      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_ADVERTISED_PROTOCOL_NAME: OUTSIDE
#      KAFKA_ADVERTISED_PORT: 9094
#      KAFKA_PROTOCOL_NAME: INSIDE
#      KAFKA_PORT: 9092
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock


  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:5.5.1"
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g -XX:+PrintGCDetails -XX:+PrintGCDateStamps"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: none
      resources:
        limits:
          memory: 5g


  kibana:
    image: "docker.elastic.co/kibana/kibana:5.5.1"
    environment:
      no_proxy: localhost,127.0.0.1,elasticsearch
    ports:
      - "5601:5601"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: none

